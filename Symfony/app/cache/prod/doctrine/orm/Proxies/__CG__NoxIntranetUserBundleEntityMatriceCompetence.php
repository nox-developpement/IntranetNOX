<?php

namespace Proxies\__CG__\NoxIntranet\UserBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MatriceCompetence extends \NoxIntranet\UserBundle\Entity\MatriceCompetence implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'societe', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'etablissement', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'matricule', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'nom', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'prenom', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'dateNaissance', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'dateAnciennete', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'statut', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'poste', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'competencePrincipale', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'competencesSecondaires'];
        }

        return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'societe', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'etablissement', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'matricule', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'nom', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'prenom', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'dateNaissance', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'dateAnciennete', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'statut', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'poste', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'competencePrincipale', '' . "\0" . 'NoxIntranet\\UserBundle\\Entity\\MatriceCompetence' . "\0" . 'competencesSecondaires'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MatriceCompetence $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateNaissance($dateNaissance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateNaissance', [$dateNaissance]);

        return parent::setDateNaissance($dateNaissance);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateNaissance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateNaissance', []);

        return parent::getDateNaissance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAnciennete($dateAnciennete)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAnciennete', [$dateAnciennete]);

        return parent::setDateAnciennete($dateAnciennete);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAnciennete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAnciennete', []);

        return parent::getDateAnciennete();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatut($statut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatut', [$statut]);

        return parent::setStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoste($poste)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoste', [$poste]);

        return parent::setPoste($poste);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoste()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoste', []);

        return parent::getPoste();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompetencePrincipale($competencePrincipale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompetencePrincipale', [$competencePrincipale]);

        return parent::setCompetencePrincipale($competencePrincipale);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompetencePrincipale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompetencePrincipale', []);

        return parent::getCompetencePrincipale();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompetencesSecondaires($competencesSecondaires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompetencesSecondaires', [$competencesSecondaires]);

        return parent::setCompetencesSecondaires($competencesSecondaires);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompetencesSecondaires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompetencesSecondaires', []);

        return parent::getCompetencesSecondaires();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\NoxIntranet\UserBundle\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setSociete($societe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSociete', [$societe]);

        return parent::setSociete($societe);
    }

    /**
     * {@inheritDoc}
     */
    public function getSociete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSociete', []);

        return parent::getSociete();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtablissement($etablissement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtablissement', [$etablissement]);

        return parent::setEtablissement($etablissement);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtablissement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtablissement', []);

        return parent::getEtablissement();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMatricule($matricule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMatricule', [$matricule]);

        return parent::setMatricule($matricule);
    }

    /**
     * {@inheritDoc}
     */
    public function getMatricule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMatricule', []);

        return parent::getMatricule();
    }

}
