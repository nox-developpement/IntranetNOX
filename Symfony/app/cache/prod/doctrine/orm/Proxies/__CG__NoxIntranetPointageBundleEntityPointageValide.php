<?php

namespace Proxies\__CG__\NoxIntranet\PointageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PointageValide extends \NoxIntranet\PointageBundle\Entity\PointageValide implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'firstname', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'lastname', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'month', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'year', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'absences', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'forfaitsDeplacement', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'forfaitsDeplacementDetails', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'mods', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'primesPanier', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'titreTransport', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'titresRepas', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'status', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'regularisation', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'totalMods'];
        }

        return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'firstname', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'lastname', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'month', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'year', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'absences', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'forfaitsDeplacement', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'forfaitsDeplacementDetails', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'mods', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'primesPanier', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'titreTransport', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'titresRepas', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'status', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'regularisation', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\PointageValide' . "\0" . 'totalMods'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PointageValide $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonth($month)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonth', [$month]);

        return parent::setMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', []);

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbsences($absences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbsences', [$absences]);

        return parent::setAbsences($absences);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsences', []);

        return parent::getAbsences();
    }

    /**
     * {@inheritDoc}
     */
    public function setForfaitsDeplacement($forfaitsDeplacement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForfaitsDeplacement', [$forfaitsDeplacement]);

        return parent::setForfaitsDeplacement($forfaitsDeplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getForfaitsDeplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForfaitsDeplacement', []);

        return parent::getForfaitsDeplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimesPanier($primesPanier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimesPanier', [$primesPanier]);

        return parent::setPrimesPanier($primesPanier);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimesPanier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimesPanier', []);

        return parent::getPrimesPanier();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitreTransport($titreTransport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitreTransport', [$titreTransport]);

        return parent::setTitreTransport($titreTransport);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitreTransport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitreTransport', []);

        return parent::getTitreTransport();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitresRepas($titresRepas)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitresRepas', [$titresRepas]);

        return parent::setTitresRepas($titresRepas);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitresRepas()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitresRepas', []);

        return parent::getTitresRepas();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstname($firstname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstname', [$firstname]);

        return parent::setFirstname($firstname);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstname', []);

        return parent::getFirstname();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastname($lastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastname', [$lastname]);

        return parent::setLastname($lastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastname', []);

        return parent::getLastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setForfaitsDeplacementDetails($forfaitsDeplacementDetails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForfaitsDeplacementDetails', [$forfaitsDeplacementDetails]);

        return parent::setForfaitsDeplacementDetails($forfaitsDeplacementDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getForfaitsDeplacementDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForfaitsDeplacementDetails', []);

        return parent::getForfaitsDeplacementDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setMods($mods)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMods', [$mods]);

        return parent::setMods($mods);
    }

    /**
     * {@inheritDoc}
     */
    public function getMods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMods', []);

        return parent::getMods();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegularisation($regularisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegularisation', [$regularisation]);

        return parent::setRegularisation($regularisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegularisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegularisation', []);

        return parent::getRegularisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalMods($totalMods)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalMods', [$totalMods]);

        return parent::setTotalMods($totalMods);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalMods()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalMods', []);

        return parent::getTotalMods();
    }

}
