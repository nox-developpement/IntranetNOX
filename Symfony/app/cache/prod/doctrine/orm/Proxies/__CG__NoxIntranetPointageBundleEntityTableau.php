<?php

namespace Proxies\__CG__\NoxIntranet\PointageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tableau extends \NoxIntranet\PointageBundle\Entity\Tableau implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'month', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'year', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'data', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'signatureCollaborateur', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'status', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'justificatifTransportFile', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'CSVData', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'regularisation'];
        }

        return ['__isInitialized__', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'id', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'user', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'month', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'year', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'data', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'signatureCollaborateur', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'status', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'justificatifTransportFile', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'CSVData', '' . "\0" . 'NoxIntranet\\PointageBundle\\Entity\\Tableau' . "\0" . 'regularisation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tableau $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', [$data]);

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', []);

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonth($month)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonth', [$month]);

        return parent::setMonth($month);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonth()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonth', []);

        return parent::getMonth();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setSignatureCollaborateur($signatureCollaborateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSignatureCollaborateur', [$signatureCollaborateur]);

        return parent::setSignatureCollaborateur($signatureCollaborateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignatureCollaborateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignatureCollaborateur', []);

        return parent::getSignatureCollaborateur();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setJustificatifTransportFile(\NoxIntranet\PointageBundle\Entity\JustificatifTransportFile $justificatifTransportFile = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJustificatifTransportFile', [$justificatifTransportFile]);

        return parent::setJustificatifTransportFile($justificatifTransportFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getJustificatifTransportFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJustificatifTransportFile', []);

        return parent::getJustificatifTransportFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setCSVData($cSVData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCSVData', [$cSVData]);

        return parent::setCSVData($cSVData);
    }

    /**
     * {@inheritDoc}
     */
    public function getCSVData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCSVData', []);

        return parent::getCSVData();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegularisation($regularisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegularisation', [$regularisation]);

        return parent::setRegularisation($regularisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegularisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegularisation', []);

        return parent::getRegularisation();
    }

}
