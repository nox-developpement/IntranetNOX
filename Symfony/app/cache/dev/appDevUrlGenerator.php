<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_assetic_fc3b92b' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fc3b92b',    'pos' => NULL,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/fc3b92b.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_assetic_fc3b92b_0' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'assetic.controller:render',    'name' => 'fc3b92b',    'pos' => 0,    '_format' => 'css',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/css/fc3b92b_style_1.css',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_pdf_parsing_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\PDFParsingBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_listing_keywords_references_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\ListingKeywordsReferencesBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ef_connect' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::loadAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/efconnect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'elfinder' => array (  0 =>   array (    0 => 'instance',    1 => 'homeFolder',  ),  1 =>   array (    '_controller' => 'FM\\ElfinderBundle\\Controller\\ElFinderController::showAction',    'instance' => 'default',    'homeFolder' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeFolder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'instance',    ),    2 =>     array (      0 => 'text',      1 => '/elfinder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_verif_maj_db_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\VerifMajDBBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_maj_db_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\MajDBBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_ressources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::accueilAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_liens' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::liensAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/liens',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_faq' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::faqAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/faq',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_archives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::archivesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/archives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_competences' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::competencesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/competences',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_competences_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::competencesKeywordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/competences/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_references' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::referencesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/references',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_references_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::referencesKeywordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/references/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_procedures' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::proceduresAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/procedures',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_download_script_connexion' => array (  0 =>   array (    0 => 'agence',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::scriptConnexionDownloadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'agence',    ),    1 =>     array (      0 => 'text',      1 => '/ressources/archives/connexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_download_script_deconnexion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::scriptDeconnexionDownloadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/archives/deconnexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_imprimantes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::imprimantesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/imprimantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_imprimantes_download' => array (  0 =>   array (    0 => 'agence',    1 => 'nom',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::scriptImprimanteDownloadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nom',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'agence',    ),    2 =>     array (      0 => 'text',      1 => '/ressources/imprimantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_serveurs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::serveursAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/serveurs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_serveur_download_script_connexion' => array (  0 =>   array (    0 => 'agence',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::scriptServeurConnexionDownloadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'agence',    ),    1 =>     array (      0 => 'text',      1 => '/ressources/serveurs/connexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_serveur_download_script_deconnexion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::scriptServeurDeconnexionDownloadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/serveurs/deconnexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_aq' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::aqAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ressources/aq',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_affichageAQ' => array (  0 =>   array (    0 => 'dossier',    1 => 'config',    2 => 'chemin',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\RessourcesBundle\\Controller\\RessourcesController::affichageAQAction',  ),  2 =>   array (    'chemin' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'chemin',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dossier',    ),    3 =>     array (      0 => 'text',      1 => '/ressources/aq',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AD_connexion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\UserBundle\\Controller\\ADConnexionController::ADConnexionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/testConnexion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AD_connexion_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\UserBundle\\Controller\\ADConnexionController::ADConnexionCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/testConnexionCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AccueilBundle\\Controller\\AccueilController::majCommunicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accueil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_accesinterdit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AccueilBundle\\Controller\\AccueilController::accesInterditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accesInterdit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_connexionRequise' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AccueilBundle\\Controller\\AccueilController::connexionRequiseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/connexionRequise',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_support' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportBundle\\Controller\\TicketController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_ticket_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportBundle\\Controller\\TicketController::ajouterTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_mes_tickets' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportBundle\\Controller\\TicketController::mesTicketsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/consulter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_support_si' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::accueilAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_support_licenses' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::licensesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/licenses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_support_ticketing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::ticketingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/ticketing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_support_wiki' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::wikiAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/wiki',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_demande_materiel' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::demandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/demande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_demande_materiel_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\SupportSIController::demandeCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/demandeCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_avancement_projet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\AvancementProjetController::avancementProjetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/avancementProjet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_information' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\SupportSIBundle\\Controller\\InformationController::informationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/supportSI/information',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_communication' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_news_SI' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationNewsSIAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/newsSI',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_communication_interne' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationInterneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/interne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_communication_externe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationExterneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/externe',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_communication_marketing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationMarketingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/marketing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_communication_download' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranetCommunicationBundle:Interne:downloadFiles',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/telechargemenet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_nox_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationNoxNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/NoxNews',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_nox_letters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::communicationNoxLettersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/communication/NoxLetters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_affichageContenu' => array (  0 =>   array (    0 => 'dossier',    1 => 'config',    2 => 'chemin',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\CommunicationBundle\\Controller\\CommunicationController::affichageContenuAction',  ),  2 =>   array (    'chemin' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'chemin',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dossier',    ),    3 =>     array (      0 => 'text',      1 => '/communication/contenu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_news_ajouter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationNewsController::ajouterNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/news/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_news_supprimer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationNewsController::supprimerNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/news/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_user' => array (  0 =>   array (    0 => 'roleUser',    1 => 'numPage',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationUserAction',    'roleUser' => 'ROLE_USER',    'numPage' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'numPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roleUser',    ),    2 =>     array (      0 => 'text',      1 => '/administration/utilisateur',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_username' => array (  0 =>   array (    0 => 'roleUser',    1 => 'termeRecherche',    2 => 'numPage',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationUsersController::administrationUsernameAction',    'roleUser' => 'ROLE_USER',    'numPage' => 1,    'termeRecherche' => 'aucun',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'numPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'termeRecherche',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roleUser',    ),    3 =>     array (      0 => 'text',      1 => '/administration/utilisateurRecherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_user_edit' => array (  0 =>   array (    0 => 'roleUser',    1 => 'userID',    2 => 'numPage',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationUsersController::editionUserAction',    'numPage' => 1,    'roleUser' => 'ROLE_USER',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'numPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userID',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roleUser',    ),    3 =>     array (      0 => 'text',      1 => '/administration/utilisateurEdition',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_userDB' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationUserDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_user_verifupdateDB' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationUserVerifDBMajAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB/confirmation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_restaurationBDD' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationBDDRestaurationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB/restauration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_restaurationBDDConfirmation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationBDDRestaurationConfirmationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB/restaurationConfirmation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_sauvegardeBDD' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::sauvegardeBDDAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB/sauvegarde',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_user_updateDB' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationUserDBMajAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurDB/maj',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_user_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_suppression_admin' => array (  0 =>   array (    0 => 'adminID',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAdminSuppressionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'adminID',    ),    1 =>     array (      0 => 'text',      1 => '/administration/admin/suppression',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_creation_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAdminCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/admin/creation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_admin_mdp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAdminMDPAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/admin/changementMDP',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_admin_mdp_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationAdminMDPACheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/admin/changementMDPCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_ticketing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationTicketingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/ticketing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_liens' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::administrationLiensAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/liens',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_suppression_lien' => array (  0 =>   array (    0 => 'lienID',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationLiensController::administrationLiensSuppressionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lienID',    ),    1 =>     array (      0 => 'text',      1 => '/administration/liens/suppression',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_modification_lien' => array (  0 =>   array (    0 => 'lienID',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationLiensController::administrationLiensModificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lienID',    ),    1 =>     array (      0 => 'text',      1 => '/administration/liens/modification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_modification_lien_check' => array (  0 =>   array (    0 => 'lienID',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationLiensController::administrationLiensModificationCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'lienID',    ),    1 =>     array (      0 => 'text',      1 => '/administration/liens/modificationCheck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_ajout_lien' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationLiensController::administrationLiensAjoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/liens/ajout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_export_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationUsersController::exportUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/utilisateurExport',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_archives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationArchivesController::administrationArchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/archives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_suppression_archive' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationArchivesController::suppressionArchiveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/administration/archives/suppression',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_texteEncart' => array (  0 =>   array (    0 => 'section',    1 => 'newText',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationController::modifierTexteEncartAction',    'newText' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newText',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'section',    ),    2 =>     array (      0 => 'text',      1 => '/administration/texteEncart',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_text' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationNewsController::pdfConversionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_imprimantes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationImprimantesController::administrationImprimantesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/imprimantes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_imprimantes_suppression' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationImprimantesController::suppressionImprimanteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/administration/imprimantes/suppression',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_serveurs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationServeursController::administrationServeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/serveurs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_suppression_serveur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationServeursController::suppressionServeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/administration/serveurs/suppression',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_communication' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationCommunicationController::administrationCommunicationAccueilAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/communication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_communication_externe' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationCommunicationController::administrationCommunicationExterneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/communication/externe',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_communication_interne' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationCommunicationController::administrationCommunicationInterneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/communication/interne',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_communication_marketing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationCommunicationController::administrationCommunicationmarketingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/communication/marketing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_administration_materiel' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AdministrationBundle\\Controller\\AdministrationMaterielController::materielAccueilAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/administration/materiel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nox_intranet_menu_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'NoxIntranet\\MenuBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login_fail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\UserBundle\\Controller\\SecurityController::loginFailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_fail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'NoxIntranet\\AccueilBundle\\Controller\\AccueilController::majCommunicationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
