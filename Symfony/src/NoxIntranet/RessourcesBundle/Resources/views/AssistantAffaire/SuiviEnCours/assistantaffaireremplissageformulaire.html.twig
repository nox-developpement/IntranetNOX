{% extends "::layout.html.twig" %}

{% block titrePage %} Edition de feuille de suivi {% endblock %}

{% block messageAccueil %}Edition de feuille de suivi - {{ suivi.Nom }}{% endblock %}

{% block contenu %}

    <div id='DivFormulaireSelectionVersionSuivi'>

        {{ form_start(formSelectionVersionSuivi, {'attr': {'class': 'formulaireSelectionVersionSuivi'}}) }}
        {{ form_errors(formSelectionVersionSuivi) }}

        <fieldset>

            <legend>Version</legend>

            {{ form_label(formSelectionVersionSuivi.version, "Selection de la version :", {'label_attr': {'class': 'labelFormulaireSelectionVersionSuivi'}}) }}
            {{ form_errors(formSelectionVersionSuivi.version) }}
            {{ form_widget(formSelectionVersionSuivi.version, {'attr': {'class': 'selectFormulaireSelectionVersionSuivi'}}) }}

            {{ form_widget(formSelectionVersionSuivi.Supprimer, {'attr': {'class': 'boutonFormulaire' }}) }}

        </fieldset>

        {{ form_end(formSelectionVersionSuivi) }}

    </div>

    <div id="DivFormulaireCloturationSuivi">

        {{ form_start(formCloturationSuivi, {'attr': {'class': 'formulaireCloturationSuivi'}}) }}
        {{ form_errors(formCloturationSuivi) }}

        <fieldset>

            <legend>Cloturation</legend>

            {{ form_widget(formCloturationSuivi.Cloturer, {'label': 'Cloturer le suivi', 'attr': {'class': 'boutonFormulaire'}}) }}

        </fieldset> 

        {{ form_widget(formCloturationSuivi._token) }}
        {{ form_end(formCloturationSuivi) }}
    </div>

    <div id="DivInfoSuivi">

        <form class="formInfo">
            <fieldset>
                <legend>Infos suivi</legend>
                <div style='display: flex; justify-content: center; border-bottom: 1px solid #1F4E79; padding-bottom: 2%; '>
                    <div id="formInfoInfoSuivi" style='display: inline-block; width: 85%; align-self: center;'>
                        <label for='agence'>Agence: </label><input name='agence' type='text' value='{{ suivi.Agence }}' disabled><br />
                        <label for='numGX'>Numéro GX: </label><input name='numGX' type='text' value='{{ suivi.NumeroGX }}' disabled><br />
                        <label for='commune'>Commune: </label><input name='commune' type='text' value='{{ suivi.Commune }}' disabled><br />
                        <label for='marche'>Marché: </label><input name='marche' type='text' value='{{ suivi.Marche }}' disabled><br />   
                        <label for='objet'>Objet: </label><input name='objet' type='text' value='{{ suivi.Objet }}' disabled><br />
                        <label for='ningediabep'>N° INGEDIA BEP: </label><input name='ningediabep' type='text' value='{{ suivi.NoINGEDIABEP }}' disabled><br />
                        <label for='estimatif'>Estimatif: </label><input name='estimatif' type='text' value='{{ suivi.Estimatif }}' disabled><br />
                        <label for='nclient'>N° Client: </label><input name='nclient' type='text' value='{{ suivi.NoClient }}' disabled><br />
                        <label for='nomClient'>Client: </label><input name='nomClient' type='text' value='{{ client.NomCLient }}' disabled><br />
                        <label for='adresseClient'>Adresse client: </label><input name='adresseClient' type='text' title="Cliquez-ici pour l'adresse du client." value='Cliquez-ici.' style='text-align: center; cursor: pointer;' readonly><br />
                        <label>Interlocuteur: </label>
                        <select type='text' name='interlocuteur' disabled>
                            {% for interlocuteur in interlocuteurs %}
                                <option value="{{ interlocuteur.NContact }}" {% if interlocuteur.NContact == interlocuteurActuel.NContact %}selected{% endif %}>{{ interlocuteur.PrenomContact }} {{ interlocuteur.NomContact }}</option>
                            {% endfor %}
                        </select>
                    </div><!--
                    --><div id='fomInfoSuiviLocking' title="Verrouiller/Déverrouiller l'édition du contenu." style='display: inline-block; width: 15%; align-self: center;  cursor: pointer;' locked=true><!--
                        --><img id='fomInfoSuiviLockingImgLocked' src='{{ asset('bundles/noxintranetressources/images/Lock-128.png') }}' alt='Déverrouiller modification.' style='width: 70%;'><!--
                        --><img id='fomInfoSuiviLockingImgUnlocked' src='{{ asset('bundles/noxintranetressources/images/Lock-Open-128.png') }}' alt='Verrouiller modification.' style='width: 70%; display: none;'><!--                                             
                        --></div>
                </div>
                <div id="formInfoNoCommande">
                    <label for='addNoCommandeName' style='display: inline-block; width: 100%; text-align: center; margin-top: 2%;'>N°Commande</label><br />
                    <input name='addNoCommandeName' type='text' style='width: 30%; margin: 0; margin-bottom: 1%; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; box-sizing: border-box; text-align: center;'><button type='button' name='addNoCommande' class='boutonFormulaire' style='width: 9%; margin-left: 1%;'>+</button><br />
                    <select name='noCommandeSelector' style='width: 40%; -webkit-box-sizing: border-box; -moz-box-sizing: border-box; -ms-box-sizing: border-box; box-sizing: border-box;' size='5'>
                        {% for nCommande in suivi.NoCommande %}
                            <option value="{{ nCommande }}" style='text-align: center;'>{{ nCommande }}</option>
                        {% endfor %}
                    </select><br />
                    <button name='deleteNoCommande' type='button' class='boutonFormulaire' style='width: 40%; font-size: 0.8vw; margin-top: 1%;'>Supprimer</button>
                </div>
                <div id='ajaxSearchAffairesDiv' style='position: absolute; top: 0; left: 0; background-color: white; border: 1px solid rgb(165, 172, 178); font-size: 0.8vw; display: none;'>
                </div>
            </fieldset>
        </form>

    </div>

    <div id="DivFormulaireRemplissageSuivi" style="margin-bottom: 5%;">

        {{ form_start(formDonneesSuivi, {'attr': {'class': 'formulaireRemplissageSuivi'}}) }}
        {{ form_errors(formDonneesSuivi) }}

        <fieldset>

            <legend>{{ suivi.Nom }}</legend>

            {% for champ in champsViews %}
                {{ form_errors(attribute(formDonneesSuivi, champ.Champ)) }}
            {% endfor %}

            <p><!--
                {% for champ in champsViews %}
                    -->{{ form_label(attribute(formDonneesSuivi, champ.Champ), champ.Nom ~ ": ", {'label_attr': {'class': ''}}) }} <!--  
                    -->{{ form_widget(attribute(formDonneesSuivi, champ.Champ)) }}<!--
                    --><br />

                    {% if champ.Type == 'Nombre' %}
                        <script>
                            var fax = document.getElementById('formDonneesSuivi_{{ champ.Champ }}');
                            var phoneRegex = new RegExp(/^[-+]?[0-9]*\.?[0-9]+$/);
                            var checkValidPhoneNumber = function () {
                                if (!phoneRegex.test(fax.value)) {
                                    fax.style.borderColor = 'red';
                                    fax.setCustomValidity("Veuillez entrer un nombre. Les dÃ©cimaux doivent Ãªtre sÃ©parÃ© par un point.");
                                } else {
                                    fax.style.borderColor = 'initial';
                                    fax.setCustomValidity('');
                                }
                            };
                            $('#formDonneesSuivi_{{ champ.Champ }}').keyup(function () {
                                checkValidPhoneNumber();
                            });
                        </script>
                    {% endif %}

                {% endfor %}

                {{ form_widget(formDonneesSuivi.Generate, {'label': 'Générer fichier Excel', 'attr': {'class': 'boutonFormulaire' }}) }}
                {{ form_widget(formDonneesSuivi.Save, {'label': 'Sauvegarder le suivi', 'attr': {'class': 'boutonFormulaire'}}) }}

            </p>

        </fieldset> 

        {{ form_end(formDonneesSuivi) }}
    </div>

    <script>
        $(window).load(function () {
            hideAndShowDataAdding();
            openClientPopup();
            ajaxAddNoCommand();
            ajaxDeleteNoCommande();
            lockUnlockDataModifying();
            getGXAffaires();
            ajaxSaveNewInfo();
        });

        // Ouvre un fenêtre pop-up contenant la/les adresse(s) du client.
        function openClientPopup() {
            // Lors du clic sur le bouton des adresses...
            $("input[name='adresseClient']").click(function () {

                // On récupére la taille et la position de qu'on va attribuer à la pop-up.
                var screenHeight = $(window).outerHeight() / 2;
                var screenWidth = $(window).outerWidth() / 3;
                var topPosition = $(window).outerHeight() / 10;
                var leftPosition = $(window).outerWidth() / 15;
                // On ouvre une fenêtre pop-up avec le code des adresses du client.
                var newwindow = window.open('', '', 'height=' + screenHeight + ',width=' + screenWidth + ',top=' + topPosition + ',left=' + leftPosition);
                newwindow.document.write("{{ clientAdr|raw }}");
                // On applique le fond de l'intranet à la fenêtre pop-up.
                $(newwindow.document).contents().find('body').css('background-image', $('#section_principal').css('background-image'));
                // On rempli l'attribut title de chaque input avec sa valeur.
                $(newwindow.document).contents().find('input').each(function () {
                    $(this).attr('title', $(this).val());
                });
                // On focus la fenêtre pop-up.
                if (window.focus) {
                    newwindow.focus();
                }
                return false;
            });
        }

        // Ajoute une numéro de commande au suivi courant.
        function ajaxAddNoCommand() {
            // Lors d'un clic sur le bouton d'ajout de N°Commande.
            $("button[name='addNoCommande']").click(function () {
                // Si le numéro de commande n'est pas vide.
                if ($.trim($("input[name='addNoCommandeName']").val()).length > 0) {
                    // On change le contenu du bouton d'ajout de numéro de commande par un gif de chargement et on le désactive.
                    $("button[name='addNoCommande']").attr('disabled', true);
                    $("button[name='addNoCommande']").html('&nbsp;');
                    $("button[name='addNoCommande']").css({
                        'background-image': "url({{ asset('bundles/noxintranetressources/images/noCommandeTraitement.gif')}})",
                        'background-position': 'center center',
                        'background-repeat': 'no-repeat',
                        'background-size': 'auto 50%'
                    });
                    // On sauvegarde le numéro en base de donnée avec une fonction Ajax.        
                    $.ajax({
                        url: '{{ path('nox_intranet_assistant_affaire_ajax_nocommande_add') }}',
                        type: 'POST',
                        data: {'IDSuivi': '{{ suivi.id }}', 'noCommandes': $("input[name='addNoCommandeName']").val()},
                        success: function (response) {
                            // On change le contenu du bouton par celui d'origine et on le réactive.
                            $("button[name='addNoCommande']").removeAttr('disabled');
                            $("button[name='addNoCommande']").html('+');
                            $("button[name='addNoCommande']").css({
                                'background-image': "none",
                                'background-position': 'center center',
                                'background-repeat': 'no-repeat',
                                'background-size': 'auto 50%'
                            });
                            // Si le numéro d'affaire n'existe pas déjà.
                            if (response === 'true') {
                                // On fait apparaître le nouveau numéro dans le selecteur de numéros.
                                var newOption = $("<option value='" + $("input[name='addNoCommandeName']").val() + "' style='text-align: center; background-color: green;'>" + $("input[name='addNoCommandeName']").val() + "</option>");
                                $("select[name='noCommandeSelector']").append(newOption);
                                // On scroll en bas du sélécteur de numéro.
                                $("select[name='noCommandeSelector']").scrollTop($("select[name='noCommandeSelector']")[0].scrollHeight);
                                // On anime la couleur de fond du nouveau numéro.
                                newOption.animate({
                                    backgroundColor: 'white'
                                }, 3000);
                                // On efface le contenue de nouveau numéro.
                                $("input[name='addNoCommandeName']").val('');
                            }
                            // Si le numéro d'affaire existe déjà.
                            else {
                                // On efface le contenue de nouveau numéro et on affiche un message d'avertissement.
                                var messageErreur = $("<p style='display: inline-block; margin: 0% 0% 1% 0%; color: red;'>Le numéro de commande existe déjà !</p>");
                                $("label[for='addNoCommandeName']").after(messageErreur);
                                setTimeout(function () {
                                    messageErreur.fadeOut(1000, function () {
                                        messageErreur.remove();
                                    });
                                }, 4000);
                                $("input[name='addNoCommandeName']").val('');
                                //alert('Le numéro d\'affaire existe déjà !');
                            }
                        }
                    });
                }
            });
        }

        // Supprime un numéro de commande du suivi courant.
        function ajaxDeleteNoCommande() {
            // Lors d'un clic sur le bouton de suppression de numéro de commande.
            $("button[name='deleteNoCommande']").click(function () {
                // Si une valeur est séléctionnée.
                if ($("select[name='noCommandeSelector']").val() !== null) {
                    // On change le contenu du bouton de suppression de numéro de commande par un gif de chargement et on le désactive.
                    $("button[name='deleteNoCommande']").attr('disabled', true);
                    $("button[name='deleteNoCommande']").html('&nbsp;');
                    $("button[name='deleteNoCommande']").css({
                        'background-image': "url({{ asset('bundles/noxintranetressources/images/noCommandeTraitement.gif')}})",
                        'background-position': 'center center',
                        'background-repeat': 'no-repeat',
                        'background-size': 'auto 50%'
                    });
                    // On supprime le numéro de la base de données avec une fonction Ajax.
                    $.ajax({
                        url: '{{ path('nox_intranet_assistant_affaire_ajax_nocommande_delete') }}',
                        type: 'POST',
                        data: {'IDSuivi': '{{ suivi.id }}', 'noCommandes': $("select[name='noCommandeSelector']").val()},
                        success: function () {
                            // On change le contenu du bouton par celui d'origine et on le réactive.
                            $("button[name='deleteNoCommande']").removeAttr('disabled');
                            $("button[name='deleteNoCommande']").html('Supprimer');
                            $("button[name='deleteNoCommande']").css({
                                'background-image': "none",
                                'background-position': 'center center',
                                'background-repeat': 'no-repeat',
                                'background-size': 'auto 50%'
                            });
                            // On efface le numéros de commande dans le sélécteur de numéro.
                            $("select[name='noCommandeSelector'] option:selected").remove();
                        }
                    });

                }
            });
        }

        // Vérrouille/Déverrouille l'édition des champs d'informations lors du clic sur le cadena.
        function lockUnlockDataModifying() {
            // Lors d'un clic sur le cadena...
            $('#fomInfoSuiviLocking').click(function () {
                // Si le cadena est vérrouillé.
                if ($(this).attr('locked') === 'true') {
                    $(this).attr('locked', 'false'); // On change l'attribut de vérrouillage de la 'div'.

                    // On change l'image du cadena.
                    $('#fomInfoSuiviLockingImgLocked').hide();
                    $('#fomInfoSuiviLockingImgUnlocked').show();

                    $("#formInfoInfoSuivi input:not(input[name='nclient'], input[name='nomClient'], input[name='adresseClient']), #formInfoInfoSuivi select").removeAttr('disabled'); // On active les 'input' d'information.
                }
                // Si le cadena est déverrouiller
                else {
                    $(this).attr('locked', 'true'); // On change l'attribut de vérrouillage de la 'div'.

                    // On change l'image du cadena.
                    $('#fomInfoSuiviLockingImgLocked').show();
                    $('#fomInfoSuiviLockingImgUnlocked').hide();


                    $("#formInfoInfoSuivi input:not(input[name='nclient'], input[name='nomClient'], input[name='adresseClient']), #formInfoInfoSuivi select").attr('disabled', true); // On désactive les 'input' d'information.
                }
            });
        }

        // Détécte les modification du contenu des champs d'info et éxecute une requête Ajax pour sauvegarder les changements.
        function ajaxSaveNewInfo() {

            // Initialisation d'un timer pour executer la fonction après 1 seconde sans frappe.
            var typewatch = (function () {
                var timer = 0;
                return function (callback, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(callback, ms);
                };
            })();
            // Execute la fonction Ajax lorsque le contenu d'un champ est modifié.
            $("#formInfoInfoSuivi input:not(input[name='nclient'], input[name='nomClient'], input[name='adresseClient'], input[name='numGX'])").on('keyup paste', function () {
                var champ = $(this);
                typewatch(function () {
                    $.ajax({
                        url: '{{ path('nox_intranet_assistant_affaire_ajax_save_new_infos') }}',
                        type: 'POST',
                        data: {'IDSuivi': '{{ suivi.id }}', 'row': champ.attr('name'), 'newInfo': champ.val()},
                        success: function (response) {
                            if (response === 'Saved') {
                                // On change la fond du champ en vert.
                                champ.stop().css('background-color', 'green');
                                // On remet le fond par défaut au bout de 3 secondes.
                                champ.animate({
                                    backgroundColor: 'initial'
                                }, 3000, function () {
                                    champ.removeAttr('style');
                                });
                            }
                        }
                    });
                }, 500);
            });
            // Execute la fonction Ajax lorsque la valeur du sélécteur est modifié.
            $("select[name='interlocuteur']").on('change', function () {
                var champ = $(this);
                typewatch(function () {
                    $.ajax({
                        url: '{{ path('nox_intranet_assistant_affaire_ajax_save_new_infos') }}',
                        type: 'POST',
                        data: {'IDSuivi': '{{ suivi.id }}', 'row': champ.attr('name'), 'newInfo': champ.val()},
                        success: function (response) {
                            if (response === 'Saved') {
                                // On change la fond du champ en vert.
                                champ.stop().css('background-color', 'green');
                                // On remet le fond par défaut au bout de 3 secondes.
                                champ.animate({
                                    backgroundColor: 'initial'
                                }, 3000, function () {
                                    champ.removeAttr('style');
                                });
                            }
                        }
                    });
                }, 500);
            });
        }

        // Renvoi les affaires dont le numéro contient la chaine "search".
        function getGXAffaires() {

            // Supprime les triggers d'event déjà existant.
            $("input[name='numGX']").unbind('blur');
            $("input[name='numGX']").unbind('keyup');
            $("input[name='numGX']").unbind('paste');
            //$('#tableFeuillePointage tr:nth-child(2) .project').unbind('input');

            // Pour toutes action dans une cellule titre d'affaire.
            $("input[name='numGX']").on('keyup paste', function () {

                // Si le champ de recherche n'est pas vide.
                if ($(this).val() !== '') {
                    $('#ajaxSearchAffairesDiv').hide();
                    var search = $(this).val();
                    var celluleProject = $(this);
                    var affaires = "http://" + window.location.hostname + "/Symfony/web/DatabasesCSV/AffairesEncode.csv";
                    var compteur = 0;
                    // Supprime les paragraphes de résultats existants.
                    $('#ajaxSearchAffairesDiv').empty();
                    // Fixe la largeur minimale de la 'div' des résultats a 1.1 fois la taille de la cellule.
                    var minWidth = celluleProject.outerWidth() * 1.1;
                    $('#ajaxSearchAffairesDiv').css('min-width', minWidth);
                    // Cherche la chaine saisi dans le fichier csv des affaires et ajoute une balise 'p' par résultats.
                    if (search !== '') {
                        $.get(affaires, function (data) {
                            var lineByLine = data.split("\n");
                            var numsAffaires = [];
                            $.each(lineByLine, function (index, value) {
                                var donnes = value.split(';');
                                numsAffaires.push(donnes[0]);
                                if (compteur < 10 && donnes[0].indexOf(search) >= 0 && (search.trim() !== donnes[0].trim())) {
                                    $('#ajaxSearchAffairesDiv').append("<p class='ajaxSearchAffairesDivResults' data-numaffaire='" + donnes[0] + "' data-nomaffaire='" + donnes[1] + "' style='background-color: white; text-align: center; margin: 0; padding: 0.5vw 0.5vw 0.5vw 0.5vw;'>" + donnes[0] + " " + donnes[1] + "</p>");
                                    compteur++;
                                }
                            });
                            // Effet visuel au passage de la souris sur les résultats.
                            $('.ajaxSearchAffairesDivResults').hover(function () {
                                $(this).css('background-color', 'rgb(217, 217, 217)');
                            }, function () {
                                $(this).css('background-color', 'white');
                            });
                            // Lors du clique sur un résultat on remplace le contenu de la recherche par le résultat.
                            $('.ajaxSearchAffairesDivResults').mousedown(function () {
                                celluleProject.val($(this).attr('data-numaffaire'));
                                celluleProject.attr('title', $(this).attr('data-nomaffaire'));
                            });
                            // Positione la 'div' contenant les résultats sous la cellules focus.
                            $('#ajaxSearchAffairesDiv').css('top', celluleProject.offset().top + celluleProject.outerHeight());
                            $('#ajaxSearchAffairesDiv').css('left', celluleProject.offset().left);
                            // Affiche la 'div' des résultats si elle n'est pas vide.
                            if (compteur > 0 && $('#form_NumeroGX').val() !== '') {
                                $('#ajaxSearchAffairesDiv').show();
                            }

                            // Cache la div des résultats lors du blur du champ de recherche et vide la cellule si le contenu n'est pas un numéro d'affaire existant.
                            celluleProject.blur(function () {
                                $('#ajaxSearchAffairesDiv').empty();
                                $('#ajaxSearchAffairesDiv').hide();
                                if ($.inArray(celluleProject.val(), numsAffaires) === -1) {
                                    celluleProject.val('');
                                }
                            });
                        });
                    }
                }
            });
        }

    </script>

{% endblock %}
