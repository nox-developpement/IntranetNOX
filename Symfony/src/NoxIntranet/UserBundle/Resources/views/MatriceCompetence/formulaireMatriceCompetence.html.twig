{% extends "::layout.html.twig" %}

{% block titrePage %} Grille de compétences {% endblock %}

{% block messageAccueil %}Grille de compétences{% endblock %}

{% block contenu %}

    <style>

        #form_competence_div {
            text-align: center;
        }

        #form_competence_div form {
            display: inline-block;
            width: auto;
            padding-top: 0.5em;
            padding-bottom: 0.5em;
            background-color: rgba(255,255,255, 0.6);
            border: 2px outset #1F4E79;
            text-align: left;
            font-size: calc(11px + 0.2vw) !important;
        }

        #form_competence_div form td {
            padding: 0.3em 0;
        }

        #form_competence_div form .form_label {
            text-align: right;
        }

        #form_competence_div form .competence_select {
            display: inline-block;
            vertical-align: middle;
        }

        #form_competence_div form .competence_select button {
            vertical-align: middle;
            margin-left: 0.5em;
        }

        #form_competence_div form .competence_select select {
            vertical-align: middle;
        }

    </style>

    <script>
        // Variable globale du nombre de compétences secondaires actuels.
        var competence_secondaire_counts = "{{ formCompetence.Competences_Secondaires|length }}";

        $(document).ready(function () {
            addCompetenceSecondaire();
            addRemoveCompetenceSecondaireButton();
            initDatepicker();
        });

        // Ajoute une nouvelle compétence secondaire au formulaire.
        function addCompetenceSecondaire() {
            // Lors du clique sur le bouton d'ajout de compétence secondaire.
            $('#add_competence_secondaire_button').click(function (e) {
                e.preventDefault();

                // La div qui contient les sélécteurs de compétence secondaire.
                var competence_secondaire_table = $('#competence_secondaire_fields_table');

                // Le prototype de sélécteur de compétence secondaire.
                var new_competence_secondaire_widget = competence_secondaire_table.data('prototype');

                // On remplace le nom du sélécteur en fonction du nombre de sélécteurs.
                new_competence_secondaire_widget = new_competence_secondaire_widget.replace(/__name__/g, competence_secondaire_counts);

                // On incérement le compteur de compétence secondaire.
                competence_secondaire_counts++;

                // On ajoute le nouveau sélécteur de compétence secondaire à la div.
                var new_competence_secondaire_tr = $("<tr class='competence_secondaire_tr'></tr>").html(new_competence_secondaire_widget);
                new_competence_secondaire_tr.insertBefore($('#add_competence_secondaire_button').parent('td').parent('tr'));
                removeCompetenceSecondaire(new_competence_secondaire_tr);

            });
        }

        // Ajoute un bouton de suppression à la compétence secondaire.
        function removeCompetenceSecondaire(new_competence_secondaire_tr) {
            // Ajoute un bouton de suppression au sélécteur.
            var remove_competence_secondaire_button = $("<button type='button' class='remove_competence_secondaire_button' style='color: red;'>&#x2716;</button>");
            new_competence_secondaire_tr.find('.competence_select').append(remove_competence_secondaire_button);

            // Lors du clique sur le bouton de suppression...
            remove_competence_secondaire_button.on('click', function (e) {
                e.preventDefault();

                // On désincrémente le compteur de compétence.
                competence_secondaire_counts--;

                // On supprime le sélécteur.
                new_competence_secondaire_tr.remove();

                // Pour chaques sélécteur...
                var selectIndex = 0;
                $('.competence_select').each(function () {
                    // On attribut l'index correspondant à la position du sélécteur comme name.
                    var selectName = $(this).find('select').attr('name');
                    $(this).find('select').attr('name', selectName.replace(/\d+/, selectIndex));
                    selectIndex++;
                });
            });
        }

        // Ajoute un bouton de suppression au compétence secondaire d'origine.
        function addRemoveCompetenceSecondaireButton() {
            $('.competence_secondaire_tr').each(function () {
                removeCompetenceSecondaire($(this));
            });
        }

        // Ajoute un widget de séléction de date au input de date.
        function initDatepicker() {
            // On change le type des input de date pour désactiver le datepicker par défaut de chrome.
            $("input[type='date']").attr('type', 'text');

            // Initialisation des datepicker.
            $('.datepicker').datepicker({
                minDate: "-100Y",
                maxDate: "0",
                yearRange: "-100:+0",
                changeMonth: true,
                changeYear: true
            });

            // On passe les datepicker en français.
            $.datepicker.regional.fr = {
                closeText: "Fermer",
                prevText: "Précédent",
                nextText: "Suivant",
                currentText: "Aujourd'hui",
                monthNames: ["janvier", "février", "mars", "avril", "mai", "juin",
                    "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
                monthNamesShort: ["janv.", "févr.", "mars", "avr.", "mai", "juin",
                    "juil.", "août", "sept.", "oct.", "nov.", "déc."],
                dayNames: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
                dayNamesShort: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
                dayNamesMin: ["D", "L", "M", "M", "J", "V", "S"],
                weekHeader: "Sem.",
                dateFormat: "dd/mm/yy",
                firstDay: 1,
                isRTL: false,
                showMonthAfterYear: false,
                yearSuffix: ""};
            $.datepicker.setDefaults($.datepicker.regional.fr);
        }

    </script>

    <div id="form_competence_div">
        {{ form_start(formCompetence) }}

        <table id="competence_secondaire_fields_table" data-prototype="<td class='form_label'>{{ form_label(formCompetence.Competences_Secondaires.vars.prototype)|e }} :&nbsp;</td><td class='competence_select'>{{ form_widget(formCompetence.Competences_Secondaires.vars.prototype)|e }}</td>">
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Societe) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Societe) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Etablissement) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Etablissement) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Nom) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Nom) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Prenom) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Prenom) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Date_Naissance) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Date_Naissance) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Date_Anciennete) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Date_Anciennete) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Statut) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Statut) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Poste) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Poste) }}</td>
            </tr>
            <tr>
                <td class='form_label'>{{ form_label(formCompetence.Competence_Principale) }} :&nbsp;</td> 
                <td>{{ form_widget(formCompetence.Competence_Principale) }}</td>
            </tr>
            {% for competence_secondaire_field in formCompetence.Competences_Secondaires %}
                <tr class='competence_secondaire_tr'>
                    <td class='form_label'>{{ form_label(competence_secondaire_field) }} :&nbsp;</td>
                    <td class='competence_select'>{{ form_widget(competence_secondaire_field) }}</td>
                </tr>
            {% endfor %}
            <tr>
                <td style='text-align: center;'>
                    <button type="button" id="add_competence_secondaire_button" style='width: 100%;'>Compétence secondaire &#x271A;</button>
                </td>
                <td>
            </tr>
            <tr>
                <td colspan='2' style='text-align: center;'>
                    {{ form_widget(formCompetence.Sauvegarder) }}
                </td>
            </tr>
        </table>
    </div>

    {{ form_end(formCompetence) }}

{% endblock %}