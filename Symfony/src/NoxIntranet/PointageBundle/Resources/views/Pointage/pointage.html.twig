{% extends "layout.html.twig" %}

{% block titrePage %} Pointage {% endblock %}

{% block messageAccueil %}Pointage{% endblock %}

{% block contenu %}
    <div id='tableFeuillePointageDivContainer'>
        <table id="tableFeuillePointage">
            <tr>
                <td style="border: none;">
                    <select id='pointage_month_selector' style="width: 100%;">
                        {% set months = { 01: 'Janvier', 02: 'Février', 03: 'Mars', 04: 'Avril', 05: 'Mai', 06: 'Juin', 07: 'Juillet', 08: 'Août', 09: 'Septembre', 10: 'Octobre', 11: 'Novembre', 12: 'Décembre' } %}
                        {% for index,month in months %}
                            <option value="{{ index }}" {% if index == currentMonth %}selected{% endif %}>{{ month }}</option>  
                        {% endfor %}
                    </select>
                </td>
                <td id='operationnel' style="background: rgb(47,117,181); color: white; border-width: 2px;" colspan="2">OPERATIONNEL</td>
                <td style="background: black; border-width: 2px;"></td>
                <td style="background: rgb(84,130,53); color: white; border-width: 2px;" colspan="5">RESSOURCES HUMAINES</td>
                <td id="addProject" style="border-width: 2px;">+ Projet</td>
            </tr>
            <tr>
                <td style="border: none;">
                    <select id='pointage_year_selector' style="width: 100%;">
                        <option value="{{ 'now'|date('Y')}}">{{ 'now'|date('Y')}}</option>
                        <option value="{{ 'now'|date_modify('+1 year')|date('Y')}}">{{ 'now'|date_modify('+1 year')|date('Y')}}</option>
                        <option value="{{ 'now'|date_modify('+2 year')|date('Y')}}">{{ 'now'|date_modify('+2 year')|date('Y')}}</option>
                        <option value="{{ 'now'|date_modify('+3 year')|date('Y')}}">{{ 'now'|date_modify('+3 year')|date('Y')}}</option>
                        <option value="{{ 'now'|date_modify('+4 year')|date('Y')}}">{{ 'now'|date_modify('+4 year')|date('Y')}}</option>
                    </select>
                </td>
                <td class='project' style='border-left-width: 2px; border-top-width: 2px; border-bottom-width: 2px;' contenteditable=true>Projet 1</td>
                <td style='border-width: 2px;'>TOTAL</td>
                <td style='border-width: 2px;'>MOD</td>
                <td style='border-width: 2px;' colspan="2">Absences</td>
                <td style='border-width: 2px;'>Titres repas</td>
                <td style='border-width: 2px;'>Forfaits déplacement</td>
                <td style='border-width: 2px;'>Primes panier</td>
                <td style='border-width: 2px;' rowspan="2">Commentaires</td>
            </tr>
            <tr>
                <td style="background: rgb(217,217,217); border-width: 2px;">{{ app.user.firstname }} {{ app.user.lastname }}</td>
                <td class='project' style='border-left-width: 2px; border-top-width: 2px; border-bottom-width: 2px;'>%</td>
                <td style='border-width: 2px;'>%</td>
                <td style='border-width: 2px;'>h</td>
                <td style='border-width: 2px;'>Matin</td>
                <td style='border-width: 2px;'>Après-midi</td>
                <td style='border-width: 2px;'>Nombre</td>
                <td style='border-width: 2px;'>Montant</td>
                <td style='border-width: 2px;'>Nombre</td>
            </tr>
            {% set frenchDays = { 'Monday': 'Lundi', 'Tuesday': 'Mardi', 'Wednesday': 'Mercredi', 'Thursday': 'Jeudi', 'Friday': 'Vendredi', 'Saturday': 'Samedi', 'Sunday':'Dimanche' } %}
            {% for date in monthDates %}
                <tr>
                    <td class='dayDateCell' style="{% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} background:rgb(166,166,166); {% endif %} border-left-width: 2px; border-right-width: 2px;">{{ frenchDays[date|date('l')]}} {{ date|date('d') }}</td>
                    <td class="projectPercentageCell project" {% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} style="background:rgb(166,166,166);" {% else %} contenteditable='true' {% endif %}></td>
                    <td class="dailyTotalPercentageCell" style="{% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} background:rgb(166,166,166); {% endif %} border-left-width: 2px; border-right-width: 2px;">
                        {% if date|date('l') != 'Saturday' and date|date('l') != 'Sunday' %}
                            0.00
                        {% endif %}
                    </td>
                    <td class='dailyHoursMod' {% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} style="background:rgb(166,166,166); border-left-width: 2px; border-right-width: 2px;" {% else %} contenteditable='true' style="border-left-width: 2px; border-right-width: 2px;" {% endif %}></td>
                    <td class='abscenceMatinSelector' style="{% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} background:rgb(166,166,166); {% endif %} border-left-width: 2px;">
                        {% if date|date('l') != 'Saturday' and date|date('l') != 'Sunday' %}
                            <select>
                                <option value=''></option>
                                <option value='AA'>AA</option>
                                <option value='TJ'>TJ</option>
                                <option value='AT'>AT</option>
                                <option value='MT'>MT</option>
                                <option value='PA'>PA</option>
                                <option value='CS'>CS</option>
                                <option value='CP'>CP</option>
                                <option value='AV'>AV</option>
                                <option value='JS'>JS</option>
                                <option value='MA'>MA</option>
                                <option value='PM'>PM</option>
                                <option value='RE'>RE</option>
                                <option value='Autre'>Autre</option>
                            </select>
                        {% endif %}
                    </td>
                    <td  class='abscenceAMSelector' style="{% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} background:rgb(166,166,166); {% endif %} border-right-width: 2px;">
                        {% if date|date('l') != 'Saturday' and date|date('l') != 'Sunday' %}
                            <select>
                                <option value=''></option>
                                <option value='AA'>AA</option>
                                <option value='TJ'>TJ</option>
                                <option value='AT'>AT</option>
                                <option value='MT'>MT</option>
                                <option value='PA'>PA</option>
                                <option value='CS'>CS</option>
                                <option value='CP'>CP</option>
                                <option value='AV'>AV</option>
                                <option value='JS'>JS</option>
                                <option value='MA'>MA</option>
                                <option value='PM'>PM</option>
                                <option value='RE'>RE</option>
                                <option value='Autre'>Autre</option>
                            </select>
                        {% endif %}
                    </td>
                    <td class='titreRepasNumberSelector' style="{% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} background:rgb(166,166,166); {% endif %} border-left-width: 2px; border-right-width: 2px;">
                        {% if date|date('l') != 'Saturday' and date|date('l') != 'Sunday' %}
                            <select>
                                <option value=''></option>
                                <option value='1'>1</option>
                            </select>
                        {% endif %}
                    </td>
                    <td class='forfaitsDeplacementMontant' {% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} style="background:rgb(166,166,166);  border-left-width: 2px; border-right-width: 2px;" {% else %} style="border-left-width: 2px; border-right-width: 2px;" contenteditable=true {% endif %}></td>
                    <td class='primesPanierNumber' {% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} style="background:rgb(166,166,166);  border-left-width: 2px; border-right-width: 2px;" {% else %} style="border-left-width: 2px; border-right-width: 2px;" contenteditable=true {% endif %}></td>
                    <td class='comments' {% if date|date('l') == 'Saturday' or date|date('l') == 'Sunday' %} style="background:rgb(166,166,166); border-left-width: 2px; border-right-width: 2px;" {% else %} style="border-left-width: 2px; border-right-width: 2px;" contenteditable=true {% endif %}></td>
                </tr>        
            {% endfor %}
            <tr>
                <td style='border: none;'></td>
                <td style='border: none;' ></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td id='titreRepasTotalNumber' style="border-width: 2px;">0</td>
                <td id='ForfaitDeplacementTotalMontant' style="border-width: 2px;">0</td>
                <td id='PrimesPanierTotalNumber' style="border-width: 2px;">0</td>
                <td style='border: none;'></td>    
            </tr>
            <tr>
                <td style='border: none;'></td>
                <td class='monthlyTotalPercentageCell'>0.00</td>
                <td style='border: none;'></td>
                <td id='monthlyTotalHoursMod'>0</td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>    
                <td style='border: none;'></td>    
            </tr>
            <tr>
                <td style='border: none;'></td>
                <td class='monthlyTotalCell'>0.00</td>
                <td style='border: none;'></td>
                <td>hmod</td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>
                <td style='border: none;'></td>    
                <td style='border: none;'></td>    
            </tr>
        </table>
    </div>
    <div id='tableFeuillePointageTypesAbscencesDivContainer'>
        <table id='tableFeuillePointageTypesAbscences'>
            <tr>
                <td colspan=3 style='border-width: 2px;'>Types d'abscences</td>
            </tr>
            <tr>
                <td style='border-top-width: 2px; border-left-width: 2px; border-bottom-width: 2px;'>Nombre</td>
                <td style='border-top-width: 2px; border-bottom-width: 2px;'>Code abscence</td>
                <td style='border-top-width: 2px; border-right-width: 2px; border-bottom-width: 2px;'>Type abscence</td>
            </tr>
            {% set typesAbscences = { 'AA': 'Abscences autorisées payées', 'TJ': 'Accident trajet', 'AT': 'Accident travail', 'MT': 'Congé de maternité', 
            'PA': 'Congé de paternité', 'CS': 'Congé sans solde', 'CP': 'Congés payés', 'AV': 'Evènement familial', 'JS': 'RTT', 'MA': 'Maladie', 'PM': 'Maladie professionnelle', 
            'RE': 'Récupération (non indiquée au bulletin)', 'Autre': 'A préciser en commentaire' } 
            %}

            {% for code, type in typesAbscences %}
                <tr>
                    <td class='nbAbscences' style='border-left-width: 2px; {% if loop.last %} border-bottom-width: 2px; {% endif %}'>0</td>
                    <td  {% if loop.last %} style='border-bottom-width: 2px;' {% endif %}>{{ code}}</td>
                    <td style='border-right-width: 2px; {% if loop.last %} border-bottom-width: 2px; {% endif %}'>{{ type }}</td>
                </tr>
            {% endfor %}
        </table>

        <table id='tableFeuillePointageTitreTransport'>
            <tr>
                <td colspan='2' style='border-width: 2px;'>Titre de transport</td>
            </tr>
            <tr>
                <td style='border-width: 2px;'>Montant total</td>
                <td style='border-width: 2px;'>Prise en charge employeur 50%*</td>
            </tr>
            <tr>
                <td id='titreTransportMontant' style='border-width: 2px;' contenteditable=true></td>
                <td id='titreTransportTotalMontant' style='border-width: 2px;'>0.00</td>
            </tr>
        </table>

        <table id='tableFeuillePointageSignature'>
            <tr>
                <td style='border-width: 2px;'>Signature collaborateur</td>
                <td colspan=2 style='border-width: 2px;' contenteditable=true></td>
            </tr>
            <tr>
                <td rowspan=2 style='border-width: 2px;'>Signature supérieur hiérarchique</td>
                <td style='border-width: 2px; width: 50%; border-right: none;'>Nom et prénom:</td>
                <td style='border-width: 2px; width: 50%; border-left: none;' contenteditable=true></td>
            </tr>
            <tr>
                <td colspan=2 style='border-width: 2px; height: 2vw;' contenteditable=true></td>
            </tr>
        </table>

    </div>

    <script>
        $(document).ready(function () {
            typesAbscenceTopMargin();
            getNewDate();
            displayDailyProjectsTotalPercentage();
            displayMonthlyProjectTotalPercentage();
            dispayMonthlyTotalHoursMod();
            displayMonthlyTotalTitresRepas();
            displayMonthlyTotalForfaitsDeplacement();
            displayMonthlyTotalPrimesPanier();
            displayTotalAbscences();
            displayTotalTitreTransport();
            addProjectColumn();
            ajaxGetData();
            ajaxSaveData();

            // Met à jours les cellules des valeurs totals.
            function tableEventHandler() {
                displayDailyProjectsTotalPercentage();
                function displayDailyProjectsTotalPercentage() {
                    // Colore en rouge les cellules dont le contenu n'est pas un nombre.
                    function checkCellContentValidity(cell) {
                        if (isNaN(parseFloat($(cell).text(), 10))) {
                            if ($(cell).text() !== '') {
                                $(cell).css('background-color', 'red');
                            } else {
                                if ($(cell).attr('contenteditable') === 'true') {
                                    $(cell).css('background-color', 'white');
                                } else {
                                    $(cell).css('background-color', 'rgb(166,166,166)');
                                }
                            }
                        } else {
                            $(cell).css('background-color', 'white');
                        }
                    }

                    // Affiche la valeur total des cellules d'une même ligne ou 'Erreur' si celle-ci n'est pas valide.
                    function checkTotalValue(cell, total) {
                        if (isNaN(total)) {
                            $(cell).parent('tr').find('.dailyTotalPercentageCell').text('Erreur');
                        } else {
                            $(cell).parent('tr').find('.dailyTotalPercentageCell').text(total.toFixed(2));
                        }
                    }

                    $('.projectPercentageCell').each(function () {
                        var total = 0;
                        $(this).parent('tr').find('.projectPercentageCell').each(function () {
                            checkCellContentValidity(this);
                            if ($(this).text() !== '') {
                                total = parseFloat(total, 10) + parseFloat($(this).text(), 10);

                            }
                            checkTotalValue(this, total);
                        });
                    });
                }

                displayMonthlyProjectTotalPercentage();
                function displayMonthlyProjectTotalPercentage() {
                    // Affiche la valeur total des cellules d'une même colonne ou 'Erreur' si celle-ci n'est pas valide.
                    function checkTotalValue(cell, total, columnNo) {
                        if (isNaN(total)) {
                            $(cell).closest("table").find("tr .monthlyTotalPercentageCell:nth-child(" + (columnNo + 1) + ")").text('Erreur');
                            $(cell).closest("table").find("tr .monthlyTotalCell:nth-child(" + (columnNo + 1) + ")").text('Erreur');
                        } else {
                            $(cell).closest("table").find("tr .monthlyTotalPercentageCell:nth-child(" + (columnNo + 1) + ")").text(total.toFixed(2));
                            var decimalTotal = parseFloat(total / 100, 10);
                            $(cell).closest("table").find("tr .monthlyTotalCell:nth-child(" + (columnNo + 1) + ")").text(decimalTotal.toFixed(2));
                        }
                    }

                    $('.projectPercentageCell').each(function () {
                        var columnNo = $(this).index();
                        var total = 0;
                        $(this).closest("table").find("tr .projectPercentageCell:nth-child(" + (columnNo + 1) + ")").each(function () {
                            if ($(this).text() !== '') {
                                total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                            }
                        });
                        checkTotalValue(this, total, columnNo);
                    });
                }

                dispayMonthlyTotalHoursMod();
                function dispayMonthlyTotalHoursMod() {
                    $('.dailyHoursMod').each(function () {
                        var total = 0;
                        $('.dailyHoursMod').each(function () {
                            if ($(this).text() !== '') {
                                total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                            }
                        });
                        $('#monthlyTotalHoursMod').text(total.toFixed(2));
                    });
                }

                displayMonthlyTotalTitresRepas();
                function displayMonthlyTotalTitresRepas() {
                    $('.titreRepasNumberSelector select').each(function () {
                        var total = 0;
                        $('.titreRepasNumberSelector select').each(function () {
                            if ($(this).find('option:selected').val() !== '') {
                                total = parseInt(total, 10) + parseInt($(this).find('option:selected').val(), 10);
                            }
                        });
                        $('#titreRepasTotalNumber').text(total);
                    });
                }

                displayMonthlyTotalForfaitsDeplacement();
                function displayMonthlyTotalForfaitsDeplacement() {
                    $('.forfaitsDeplacementMontant').each(function () {
                        var total = 0;
                        $('.forfaitsDeplacementMontant').each(function () {
                            if ($(this).text() !== '') {
                                total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                            }
                        });
                        $('#ForfaitDeplacementTotalMontant').text(total.toFixed(2));
                    });
                }

                displayMonthlyTotalPrimesPanier();
                function displayMonthlyTotalPrimesPanier() {
                    $('.primesPanierNumber').each(function () {
                        var total = 0;
                        $('.primesPanierNumber').each(function () {
                            if ($(this).text() !== '') {
                                total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                            }
                        });
                        $('#PrimesPanierTotalNumber').text(total.toFixed(2));
                    });
                }

                displayTotalAbscences();
                function displayTotalAbscences() {

                    // Calcule le total de chaque type d'abscences et affiche la valeur dans la cellule correspondante.
                    function getAbscencesCount(nbAbscencesCell) {
                        var codeAbsences = $(nbAbscencesCell).next().text();
                        var total = 0;

                        $('.abscenceMatinSelector').each(function () {
                            if (codeAbsences === $(this).find('select option:selected').val()) {
                                total = parseFloat(total, 10) + parseFloat(0.5, 10);
                            }
                        });
                        $('.abscenceAMSelector').each(function () {
                            if (codeAbsences === $(this).find('select option:selected').val()) {
                                total = parseFloat(total, 10) + parseFloat(0.5, 10);
                            }
                        });
                        $(nbAbscencesCell).text(total);
                    }

                    $('.abscenceMatinSelector select, .abscenceAMSelector select').each(function () {
                        $('.nbAbscences').each(function () {
                            getAbscencesCount(this);
                        });
                    });
                }

                displayTotalTitreTransport();
                function displayTotalTitreTransport() {
                    $('#titreTransportMontant').each(function () {
                        var total = 0;
                        if ($('#titreTransportMontant').text() !== '') {
                            total = parseFloat($('#titreTransportMontant').text(), 10) / 2;
                        }
                        $('#titreTransportTotalMontant').text(total.toFixed(2));
                    });
                }
            }

            // Affiche les jours du moi en fonction du mois et de l'année séléctionées.
            function getNewDate() {
                $('#pointage_month_selector, #pointage_year_selector').on('change', function () {
                    $.ajax({
                        type: 'POST',
                        dataType: 'json',
                        url: '{{ path('nox_intranet_pointage_ajax_set_date') }}',
                        data: {month: $('#pointage_month_selector option:selected').val(), year: $('#pointage_year_selector option:selected').val()},
                        success: function (response) {
                            $('.dayDateCell').each(function (index) {
                                $(this).transition({
                                    rotateX: '360deg'
                                }, function () {
                                    $(this).css('transform', '');
                                });
                                if (response[index] === undefined) {
                                    $(this).html('');
                                    $(this).parent('tr').find('td').css('background', 'white');
                                } else {
                                    $(this).html(response[index]);
                                    if (response[index].indexOf('Samedi') >= 0 || response[index].indexOf('Dimanche') >= 0) {
                                        $(this).parent('tr').find('td').css('background', 'rgb(166,166,166)');
                                        $(this).next('td').attr('contenteditable', false);
                                    } else {
                                        $(this).parent('tr').find('td').css('background', 'white');
                                        $(this).next('td').attr('contenteditable', true);
                                    }
                                }
                            });
                        }
                    });
                });
            }

            // Calcule et affiche le pourcentage total de chaque ligne de projets et vérifie la validité des donnnées.
            function displayDailyProjectsTotalPercentage() {

                // Colore en rouge les cellules dont le contenu n'est pas un nombre.
                function checkCellContentValidity(cell) {
                    if (isNaN(parseFloat($(cell).text(), 10))) {
                        if ($(cell).text() !== '') {
                            $(cell).css('background', 'red');
                        } else {
                            $(cell).css('background', 'white');
                        }

                    } else {
                        $(cell).css('background', 'white');
                    }
                }

                // Affiche la valeur total des cellules d'une même ligne ou 'Erreur' si celle-ci n'est pas valide.
                function checkTotalValue(cell, total) {
                    if (isNaN(total)) {
                        $(cell).parent('tr').find('.dailyTotalPercentageCell').text('Erreur');
                    } else {
                        $(cell).parent('tr').find('.dailyTotalPercentageCell').text(total.toFixed(2));
                    }
                }

                $('.projectPercentageCell').on('blur keyup paste input', function () {
                    var total = 0;
                    $(this).parent('tr').find('.projectPercentageCell').each(function () {
                        checkCellContentValidity(this);
                        if ($(this).text() !== '') {
                            total = parseFloat(total, 10) + parseFloat($(this).text(), 10);

                        }
                        checkTotalValue(this, total);
                    });
                });

            }

            // Calcule et affiche le pourcentage total de chaque colonne de projets et vérifie la validité des données.
            function displayMonthlyProjectTotalPercentage() {

                // Affiche la valeur total des cellules d'une même colonne ou 'Erreur' si celle-ci n'est pas valide.
                function checkTotalValue(cell, total, columnNo) {
                    if (isNaN(total)) {
                        $(cell).closest("table").find("tr .monthlyTotalPercentageCell:nth-child(" + (columnNo + 1) + ")").text('Erreur');
                        $(cell).closest("table").find("tr .monthlyTotalCell:nth-child(" + (columnNo + 1) + ")").text('Erreur');
                    } else {
                        $(cell).closest("table").find("tr .monthlyTotalPercentageCell:nth-child(" + (columnNo + 1) + ")").text(total.toFixed(2));
                        var decimalTotal = parseFloat(total / 100, 10);
                        $(cell).closest("table").find("tr .monthlyTotalCell:nth-child(" + (columnNo + 1) + ")").text(decimalTotal.toFixed(2));
                    }
                }

                $('.projectPercentageCell').on('blur keyup paste input change', function () {
                    var columnNo = $(this).index();
                    var total = 0;
                    $(this).closest("table").find("tr .projectPercentageCell:nth-child(" + (columnNo + 1) + ")").each(function () {
                        if ($(this).text() !== '') {
                            total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                        }
                    });
                    checkTotalValue(this, total, columnNo);
                });
            }

            // Calcule et affiche le nombre d'heure total pour le mois courant.
            function dispayMonthlyTotalHoursMod() {
                $('.dailyHoursMod').on('blur keyup paste input', function () {
                    var total = 0;
                    $('.dailyHoursMod').each(function () {
                        if ($(this).text() !== '') {
                            total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                        }
                    });
                    $('#monthlyTotalHoursMod').text(total.toFixed(2));
                });
            }

            // Calcule et affiche le nombre total de titres repas pour le mois courant.
            function displayMonthlyTotalTitresRepas() {
                $('.titreRepasNumberSelector select').change(function () {
                    var total = 0;
                    $('.titreRepasNumberSelector select').each(function () {
                        if ($(this).find('option:selected').val() !== '') {
                            total = parseInt(total, 10) + parseInt($(this).find('option:selected').val(), 10);
                        }
                    });
                    $('#titreRepasTotalNumber').text(total);
                });
            }

            // Calcule et affiche le montant total du forfaits de déplacement pour le mois courant.
            function displayMonthlyTotalForfaitsDeplacement() {
                $('.forfaitsDeplacementMontant').on('blur keyup paste input', function () {
                    var total = 0;
                    $('.forfaitsDeplacementMontant').each(function () {
                        if ($(this).text() !== '') {
                            total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                        }
                    });
                    $('#ForfaitDeplacementTotalMontant').text(total.toFixed(2));
                });
            }

            // Calcule et affiche le montant total des primes de panier pour le mois courant.
            function displayMonthlyTotalPrimesPanier() {
                $('.primesPanierNumber').on('blur keyup paste input', function () {
                    var total = 0;
                    $('.primesPanierNumber').each(function () {
                        if ($(this).text() !== '') {
                            total = parseFloat(total, 10) + parseFloat($(this).text(), 10);
                        }
                    });
                    $('#PrimesPanierTotalNumber').text(total.toFixed(2));
                });
            }

            // Aligne les petits tableau sur la première ligne du grand.
            function typesAbscenceTopMargin() {
                var margin_top = $('#tableFeuillePointage tr:first-child').height();
                $('#tableFeuillePointageTypesAbscences').css('margin-top', margin_top);
            }

            // Calcule et affiche le nombre total de chaque type d'abscences.
            function displayTotalAbscences() {

                // Calcule le total de chaque type d'abscences et affiche la valeur dans la cellule correspondante.
                function getAbscencesCount(nbAbscencesCell) {
                    var codeAbsences = $(nbAbscencesCell).next().text();
                    var total = 0;

                    $('.abscenceMatinSelector').each(function () {
                        if (codeAbsences === $(this).find('select option:selected').val()) {
                            total = parseFloat(total, 10) + parseFloat(0.5, 10);
                        }
                    });
                    $('.abscenceAMSelector').each(function () {
                        if (codeAbsences === $(this).find('select option:selected').val()) {
                            total = parseFloat(total, 10) + parseFloat(0.5, 10);
                        }
                    });
                    $(nbAbscencesCell).text(total);
                }

                $('.abscenceMatinSelector select, .abscenceAMSelector select').change(function () {
                    $('.nbAbscences').each(function () {
                        getAbscencesCount(this);
                    });
                });
            }

            // Calcule le montant de remboursement des titres de tranport.
            function displayTotalTitreTransport() {
                $('#titreTransportMontant').on('blur keyup paste input', function () {
                    var total = 0;
                    if ($('#titreTransportMontant').text() !== '') {
                        total = parseFloat($('#titreTransportMontant').text(), 10) / 2;
                    }
                    $('#titreTransportTotalMontant').text(total.toFixed(2));
                });
            }

            // Lis le contenu des cellules du tableau et renvoie le résultat sous forme de chaine pour sauvegarde en base de données.
            function ajaxSaveData() {
                $('td[contenteditable]').on('blur', function () {
                    var data = {};
                    data['contenteditable'] = [];
                    data['select'] = [];
                    data['nbProject'] = $('#tableFeuillePointage tr:nth-child(3) .project').length;

                    $('td[contenteditable]').each(function (index) {
                        data['contenteditable'][index] = $(this).text();
                    });

                    $('select').each(function (index) {
                        data['select'][index] = $(this).val();
                    });

                    var serializedData = JSON.stringify(data);

                    $.ajax({
                        type: 'POST',
                        url: '{{ path('nox_intranet_pointage_ajax_save_data') }}',
                        data: {month: $('#pointage_month_selector option:selected').val(), year: $('#pointage_year_selector option:selected').val(), data: serializedData}
                    });
                });

                $('select').change(function () {
                    var data = {};
                    data['contenteditable'] = [];
                    data['select'] = [];
                    data['nbProject'] = $('#tableFeuillePointage tr:nth-child(3) .project').length;

                    $('td[contenteditable]').each(function (index) {
                        data['contenteditable'][index] = $(this).text();
                    });

                    $('select').each(function (index) {
                        data['select'][index] = $(this).val();
                    });

                    var serializedData = JSON.stringify(data);

                    $.ajax({
                        type: 'POST',
                        url: '{{ path('nox_intranet_pointage_ajax_save_data') }}',
                        data: {month: $('#pointage_month_selector option:selected').val(), year: $('#pointage_year_selector option:selected').val(), data: serializedData}
                    });
                });
            }

            // Récupère les données du tableau en base de données et les injectes dans les cellules.
            function ajaxGetData() {
                $.ajax({
                    type: 'POST',
                    url: '{{ path('nox_intranet_pointage_ajax_get_data') }}',
                    data: {month: $('#pointage_month_selector option:selected').val(), year: $('#pointage_year_selector option:selected').val()},
                    success: function (response) {
                        if (response !== '') {
                            var data = JSON.parse(response);

                            // Ajoute un td après chaque td du dernier projet.
                            function addTd() {
                                var total = $('#tableFeuillePointage').find('tr').length;
                                $('#tableFeuillePointage').find('tr').each(function (index) {
                                    if (index === 1) {
                                        $(this).find('td').eq($('.project').last().index()).after("<td class='project' style='border-top-width: 2px; border-bottom-width: 2px;' contenteditable=true>Nouveau projet</td>");
                                    } else if (index === 2) {
                                        $(this).find('td').eq($('.project').last().index()).after("<td class='project' style='border-top-width: 2px; border-bottom-width: 2px;' contenteditable=true>%</td>");
                                    } else if (index === total - 2) {
                                        //$('.monthlyTotalPercentageCell').last().css('background-color', 'orange');
                                        $('.monthlyTotalPercentageCell').last().after("<td class='monthlyTotalPercentageCell'>0.00</td>");
                                    } else if (index === total - 1) {
                                        $('.monthlyTotalCell').last().after("<td class='monthlyTotalCell'>0.00</td>");
                                        //$('.monthlyTotalCell').last().css('background-color', 'orange');
                                    } else if (index > 1 && index < total - 3) {
                                        var background = $(this).find('td').eq($('.project').last().index()).css('background-color');
                                        var contenteditable = $(this).find('td').eq($('.project').last().index()).attr('contenteditable');
                                        $(this).find('td').eq($('.project').last().index()).after("<td class='projectPercentageCell project'></td>");
                                        $(this).find('td').eq($('.project').last().index()).next().css('background-color', background);
                                        $(this).find('td').eq($('.project').last().index()).next().attr('contenteditable', contenteditable);
                                    }
                                });
                            }

                            // Incrémente le colspan du header des projets de 1.
                            function setColSpan() {
                                var colspan = parseInt($('#operationnel').attr('colspan'), 10);
                                $('#operationnel').attr('colspan', colspan + 1);
                            }

                            for (var i = 0; i < data['nbProject'] - 1; i++) {
                                addTd();
                                setColSpan();
                            }

                            $('td[contenteditable]').each(function (index) {
                                $(this).text(data['contenteditable'][index]);
                            });
                            $('select').each(function (index) {
                                $(this).val(data['select'][index]);
                            });
                            ajaxSaveData();
                            tableEventHandler();
                            displayDailyProjectsTotalPercentage();
                            displayMonthlyProjectTotalPercentage();
                            dispayMonthlyTotalHoursMod();
                            displayMonthlyTotalTitresRepas();
                            displayMonthlyTotalForfaitsDeplacement();
                            displayMonthlyTotalPrimesPanier();
                            displayTotalAbscences();
                            displayTotalTitreTransport();
                        }
                    }
                });
            }

            // Ajout une nouvelle colonne de projet au tableau.
            function addProjectColumn() {
                $('#addProject').click(function () {
                    addTd();
                    setColSpan();
                    ajaxSaveData();
                });

                // Ajoute un td après chaque td du dernier projet.
                function addTd() {
                    var total = $('#tableFeuillePointage').find('tr').length;
                    $('#tableFeuillePointage').find('tr').each(function (index) {
                        if (index === 1) {
                            $(this).find('td').eq($('.project').last().index()).after("<td class='project' style='border-top-width: 2px; border-bottom-width: 2px;' contenteditable=true>Nouveau projet</td>");
                        } else if (index === 2) {
                            $(this).find('td').eq($('.project').last().index()).after("<td class='project' style='border-top-width: 2px; border-bottom-width: 2px;' contenteditable=true>%</td>");
                        } else if (index === total - 2) {
                            //$('.monthlyTotalPercentageCell').last().css('background-color', 'orange');
                            $('.monthlyTotalPercentageCell').last().after("<td class='monthlyTotalPercentageCell'>0.00</td>");
                        } else if (index === total - 1) {
                            $('.monthlyTotalCell').last().after("<td class='monthlyTotalCell'>0.00</td>");
                            //$('.monthlyTotalCell').last().css('background-color', 'orange');
                        } else if (index > 1 && index < total - 3) {
                            var background = $(this).find('td').eq($('.project').last().index()).css('background-color');
                            var contenteditable = $(this).find('td').eq($('.project').last().index()).attr('contenteditable');
                            $(this).find('td').eq($('.project').last().index()).after("<td class='projectPercentageCell project'></td>");
                            $(this).find('td').eq($('.project').last().index()).next().css('background-color', background);
                            $(this).find('td').eq($('.project').last().index()).next().attr('contenteditable', contenteditable);
                        }
                    });
                }

                // Incrémente le colspan du header des projets de 1.
                function setColSpan() {
                    var colspan = parseInt($('#operationnel').attr('colspan'), 10);
                    $('#operationnel').attr('colspan', colspan + 1);
                }

                // Lis le contenu des cellules du tableau et renvoie le résultat sous forme de chaine pour sauvegarde en base de données.
                function ajaxSaveData() {
                    var data = {};
                    data['contenteditable'] = [];
                    data['select'] = [];
                    data['nbProject'] = $('#tableFeuillePointage tr:nth-child(3) .project').length;

                    $('td[contenteditable]').each(function (index) {
                        data['contenteditable'][index] = $(this).text();
                    });

                    $('select').each(function (index) {
                        data['select'][index] = $(this).val();
                    });

                    var serializedData = JSON.stringify(data);

                    $.ajax({
                        type: 'POST',
                        url: '{{ path('nox_intranet_pointage_ajax_save_data') }}',
                        data: {month: $('#pointage_month_selector option:selected').val(), year: $('#pointage_year_selector option:selected').val(), data: serializedData}
                    });

                    displayDailyProjectsTotalPercentage();
                    displayMonthlyProjectTotalPercentage();
                    dispayMonthlyTotalHoursMod();
                    displayMonthlyTotalTitresRepas();
                    displayMonthlyTotalForfaitsDeplacement();
                    displayMonthlyTotalPrimesPanier();
                    displayTotalAbscences();
                    displayTotalTitreTransport();
                }
            }
        });
    </script>

{% endblock %}